{"version":3,"sources":["components/AddAppointments.js","components/SearchAppointments.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","patientName","Address","aptDate","aptTime","aptNotes","handleChange","bind","handleAdd","e","preventDefault","tempApt","this","props","addAppointment","setState","toggleForm","target","value","name","className","formDisplay","id","onClick","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","ListAppointments","appointments","map","item","key","aptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","date","parse","format","App","myAppointments","queryText","lastIndex","order","dir","query","tempApts","findIndex","apt","unshift","without","fetch","then","response","json","result","apts","filteredApts","sort","a","b","toLowerCase","filter","eachItem","includes","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.20c60522.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nclass AddAppointments extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            patientName: '',\r\n            Address: '',\r\n            aptDate: '',\r\n            aptTime: '',\r\n            aptNotes: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n\r\n    }\r\n\r\n    handleAdd(e){\r\n        e.preventDefault();\r\n        let tempApt = {\r\n            patientName: this.state.patientName,\r\n            Address: this.state.Address,\r\n            aptDate: this.state.aptDate + ' ' + this.state.aptTime,\r\n            aptNotes: this.state.aptNotes\r\n        };\r\n\r\n        this.props.addAppointment(tempApt);\r\n\r\n        this.setState({\r\n            patientName: '',\r\n            Address: '',\r\n            aptDate: '',\r\n            aptTime: '',\r\n            aptNotes: ''\r\n        });\r\n        this.props.toggleForm();\r\n    }\r\n\r\n    handleChange(e){\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <div className={\r\n                'card textcenter mt-3 ' +\r\n                (this.props.formDisplay ? '' : 'add-appointment')\r\n            }>\r\n            <div className=\"apt-addheading card-header bg-primary text-white\" id=\"hov\" onClick={this.props.toggleForm}>\r\n              <FaPlus /> Add Appointment\r\n            </div>\r\n  \r\n            <div className=\"card-body\">\r\n              <form id=\"aptForm\" noValidate\r\n                onSubmit={this.handleAdd}>\r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"patientName\"\r\n                    readOnly\r\n                  >\r\n                    Patient Name\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"patientName\"\r\n                      placeholder=\"Patient's Name\"\r\n                      value={this.state.patientName}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n  \r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"Address\"\r\n                  >\r\n                    Address\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"Address\"\r\n                      placeholder=\"Patient's Address\"\r\n                      value={this.state.Address}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n  \r\n                <div className=\"form-group form-row\">\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"aptDate\"\r\n                  >\r\n                    Date\r\n                  </label>\r\n                  <div className=\"col-md-4\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"aptDate\"\r\n                      id=\"aptDate\"\r\n                      value={this.state.aptDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                  <label\r\n                    className=\"col-md-2 col-form-label text-md-right\"\r\n                    htmlFor=\"aptTime\"\r\n                  >\r\n                    Time\r\n                  </label>\r\n                  <div className=\"col-md-4\">\r\n                    <input\r\n                      type=\"time\"\r\n                      className=\"form-control\"\r\n                      name=\"aptTime\"\r\n                      id=\"aptTime\"\r\n                      value={this.state.aptTime}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n  \r\n                <div className=\"form-group form-row\">\r\n                  <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\r\n                    Apt. Notes\r\n                  </label>\r\n                  <div className=\"col-md-10\">\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      rows=\"4\"\r\n                      cols=\"50\"\r\n                      name=\"aptNotes\"\r\n                      id=\"aptNotes\"\r\n                      placeholder=\"Appointment Notes\"\r\n                      value={this.state.aptNotes}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n  \r\n                <div className=\"form-group form-row mb-0\">\r\n                  <div className=\"offset-md-2 col-md-10\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary d-block ml-auto\"\r\n                    >\r\n                      Add Appointment\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddAppointments;","import React, { Component } from 'react';\r\n\r\nclass SearchAppointments extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"search-appointments row justify-content-center my-4\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  id=\"SearchApts\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  aria-label=\"Search Appointments\"\r\n                  onChange={e => this.props.searchApts(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary dropdown-toggle\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    Sort by: <span className=\"caret\" />\r\n                  </button>\r\n    \r\n                  <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                    <button className={\r\n                        'sort-by dropdown-item ' +\r\n                        (this.props.orderBy === 'patientName' ? 'active': '') \r\n                    } \r\n                    onClick={ e => this.props.changeOrder('patientName', this.props.orderDir)}\r\n                    href=\"#\">\r\n                      Patient Name\r\n                    </button>\r\n                    <button className={\r\n                        'sort-by dropdown-item ' +\r\n                        (this.props.orderBy === 'aptDate' ? 'active': '')\r\n                     }\r\n                     onClick={ e => this.props.changeOrder('aptDate', this.props.orderDir)} \r\n                     href=\"#\">\r\n                      Date\r\n                    </button>\r\n                    <button className={\r\n                        'sort-by dropdown-item ' +\r\n                        (this.props.orderBy === 'Address' ? 'active': '') \r\n                        }\r\n                        onClick={ e => this.props.changeOrder('Address', this.props.orderDir)}\r\n                        href=\"#\">\r\n                      Address\r\n                    </button>\r\n                    <div role=\"separator\" className=\"dropdown-divider\" />\r\n                    <button className={\r\n                        'sort-by dropdown-item ' +\r\n                        (this.props.orderDir === 'asc' ? 'active': '')\r\n                     } \r\n                     onClick={ e => this.props.changeOrder(this.props.orderBy, 'asc')}\r\n                     href=\"#\">\r\n                      Asc\r\n                    </button>\r\n                    <button className={\r\n                        'sort-by dropdown-item ' +\r\n                        (this.props.orderDir === 'desc' ? 'active': '')\r\n                     } \r\n                     onClick={ e => this.props.changeOrder(this.props.orderBy, 'desc')}\r\n                     href=\"#\">\r\n                      Desc\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchAppointments;","import React, { Component } from 'react';\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport Moment from 'react-moment';\r\n\r\nclass ListAppointments extends Component{\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"appointment-list item-list mb-3\">\r\n                {this.props.appointments.map( item => (\r\n                    <div className=\"patient-item col media py-3\" key={item.aptId}>\r\n                    <div className=\"mr-3\">\r\n                      <button className=\"patient-delete btn btn-sm btn-danger\" onClick={() => this.props.deleteAppointment(item)}>\r\n                          <FaTimes />\r\n                      </button>\r\n                    </div>\r\n        \r\n                    <div className=\"patient-info media-body\" id=\"hov\">\r\n                      <div className=\"patient-head d-flex\">\r\n                        <span \r\n                            className=\"patient-name\" \r\n                            contentEditable \r\n                            suppressContentEditableWarning \r\n                            onBlur={\r\n                                e => this.props.updateInfo('patientName', e.target.innerText,item.aptId)\r\n                            }\r\n                        >{item.patientName}</span>\r\n                        <span className=\"apt-date ml-auto\">\r\n                            <Moment \r\n                                date={item.aptDate}\r\n                                parse=\"YYYY-MM-dd hh:mm\"\r\n                                format=\"MMM-DD h:mma\" \r\n                            />\r\n                        </span>\r\n                      </div>\r\n        \r\n                      <div className=\"Address\">\r\n                        <span className=\"label-item\">Address:  </span>\r\n                        <span \r\n                            className=\"Address\"\r\n                            contentEditable \r\n                            suppressContentEditableWarning \r\n                            onBlur={\r\n                                e => this.props.updateInfo('Address', e.target.innerText,item.aptId)\r\n                            }\r\n                        >{item.Address}</span>\r\n                      </div>\r\n                      <div \r\n                        className=\"apt-notes\"\r\n                        contentEditable \r\n                        suppressContentEditableWarning \r\n                        onBlur={\r\n                            e => this.props.updateInfo('aptNotes', e.target.innerText,item.aptId)\r\n                        }\r\n                        >{item.aptNotes}</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                ))}\r\n        </div>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default ListAppointments;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport AddAppointments from './AddAppointments';\nimport SearchAppointments from './SearchAppointments';\nimport ListAppointments from './ListAppointments';\n\nimport {without, findIndex} from 'lodash';\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n      myAppointments: [],\n      formDisplay: false,\n      orderBy: 'patientName',\n      orderDir: 'asc',\n      queryText: '',\n      lastIndex:0\n    };\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchApts=this.searchApts.bind(this);\n    this.updateInfo=this.updateInfo.bind(this);\n  }\n  \n\ntoggleForm(){\n  this.setState({\n    formDisplay: !this.state.formDisplay\n  });\n}\n\n\nchangeOrder(order,dir){\n  this.setState({\n    orderBy: order,\n    orderDir: dir\n  });\n}\n\n\nsearchApts(query){\n  this.setState({queryText: query});\n}\n\nupdateInfo(name,value,id){\n  let tempApts = this.state.myAppointments;\n  let aptIndex = findIndex(this.state.myAppointments, {\n    aptId: id\n  });\n  tempApts[aptIndex][name] = value;\n  this.setState({\n    myAppointments: tempApts\n  });\n}\n\naddAppointment(apt){\n  let tempApts = this.state.myAppointments;\n  apt.aptId = this.state.lastIndex;\n  tempApts.unshift(apt);\n  this.setState({\n    myAppointments: tempApts,\n    lastIndex: this.state.lastIndex + 1\n  })\n}\n  deleteAppointment(apt){\n    let tempApts = this.state.myAppointments;\n    tempApts = without(tempApts, apt);\n\n    this.setState({\n      myAppointments: tempApts\n    });\n  }\n\n  componentDidMount(){\n    fetch('./data.json')\n      .then(response => response.json())\n      .then(result => {\n        const apts = result.map(item => {\n          item.aptId = this.state.lastIndex;\n          this.setState({ lastIndex: this.state.lastIndex + 1 })\n          return item;\n        })\n        this.setState({\n          myAppointments: apts\n        });\n      });\n  }\n  render(){\n\n    let order;\n    let filteredApts = this.state.myAppointments;\n    if(this.state.orderDir === 'asc'){\n      order = 1;\n    } else {\n      order = -1;\n    }\n\n    filteredApts = filteredApts.sort((a,b) => {\n      if (a[this.state.orderBy].toLowerCase() < b[this.state.orderBy].toLowerCase()){\n        return -1 * order;\n      } else {\n        return 1 * order;\n      }\n    }).filter(eachItem => {\n      return(\n        eachItem['patientName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['Address']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['aptNotes']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) \n      )\n    });\n\n  return (\n    <main className=\"page\" id=\"customer-ratings\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"container\">\n              <AddAppointments \n                formDisplay = { this.state.formDisplay }\n                toggleForm={this.toggleForm}\n                addAppointment = {this.addAppointment} \n              />\n              <SearchAppointments \n                orderBy = {this.state.orderBy}\n                orderDir={this.state.orderDir}\n                changeOrder={this.changeOrder}\n                searchApts={this.searchApts}\n              />\n              <div className=\"List\"><ListAppointments \n                appointments={filteredApts} \n                deleteAppointment={this.deleteAppointment}\n                updateInfo={this.updateInfo}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js'\nimport 'popper.js/dist/umd/popper.js'\nimport 'bootstrap/dist/js/bootstrap.js'\n// function App(){\n//   <h1>Hello!</h1>\n// }\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}